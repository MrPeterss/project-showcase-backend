generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  ADMIN,
  INSTRUCTOR,
  STUDENT
}

model Semester {
  id              Int       @id @default(autoincrement())
  shortName String
  startDate DateTime
  endDate DateTime
  courses Course[]
}

model Course {
  id              Int       @id @default(autoincrement())
  department String
  number Int
  name String
  projectTypes ProjectType[]
  semester Semester @relation(fields: [semesterId], references: [id])
  semesterId Int
}

model ProjectType {
  id              Int       @id @default(autoincrement())
  name String
  content Bytes
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
}

model Team {
  id        Int       @id @default(autoincrement())
  name      String
  port      Int       @unique
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
  members   User[]
  projects  Project[]
  createdAt DateTime  @default(now())
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  firebaseId String @unique
  team            Team      @relation(fields: [teamId], references: [id])
  teamId          Int
  projectsCreated Project[]
  createdAt       DateTime  @default(now())
  role         Role
}

model Project {
  id             Int      @id @default(autoincrement())
  team           Team     @relation(fields: [teamId], references: [id])
  teamId         Int
  deployedBy     User     @relation(fields: [deployedById], references: [id])
  deployedById   Int
  status     String   // e.g., 'running', 'stopped', 'error'.   FIX with ENUM
  containerId String? // Docker container ID
  gitHubLink String
  deployedAt     DateTime @default(now())
  stoppedAt  DateTime?

  @@unique([teamId, status]) // Fix
}
